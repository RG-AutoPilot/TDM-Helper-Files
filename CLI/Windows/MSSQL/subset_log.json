Starting tables:

Model 1:
  dbo.Orders
    ABS(BINARY_CHECKSUM([OrderID],[CustomerID],[EmployeeID],[OrderDate],[RequiredDate],[ShippedDate],[ShipVia],[Freight],[ShipName],[ShipAddress],[ShipCity],[ShipRegion],[ShipPostalCode],[ShipCountry],[ShipCountryCode],[ShipState],[OrderAddress],[ShipId],[TestOrder]) * 87178291199) % 2147483647 < 184549375.9140625
  dbo.CustomerCustomerDemo
    ABS(BINARY_CHECKSUM([CustomerID],[CustomerTypeID]) * 87178291199) % 2147483647 < 184549375.9140625
  dbo.Products
    ABS(BINARY_CHECKSUM([ProductID],[ProductName],[SupplierID],[CategoryID],[QuantityPerUnit],[UnitPrice],[UnitsInStock],[UnitsOnOrder],[ReorderLevel],[Discontinued],[UnitId],[UnitVolume],[UnitName]) * 87178291199) % 2147483647 < 184549375.9140625
  dbo.EmployeeTerritories
    ABS(BINARY_CHECKSUM([EmployeeID],[TerritoryID],[foo]) * 87178291199) % 2147483647 < 184549375.9140625

--------------------------------------------------

Static data tables:

dbo.Categories
dbo.CustomerDemographics
dbo.Shippers
dbo.Suppliers
dbo.Region

--------------------------------------------------

Directional graph:

Model 1:
  Step 1
    dbo.Orders
    ABS(BINARY_CHECKSUM([OrderID],[CustomerID],[EmployeeID],[OrderDate],[RequiredDate],[ShippedDate],[ShipVia],[Freight],[ShipName],[ShipAddress],[ShipCity],[ShipRegion],[ShipPostalCode],[ShipCountry],[ShipCountryCode],[ShipState],[OrderAddress],[ShipId],[TestOrder]) * 87178291199) % 2147483647 < 184549375.9140625
  Step 2
    dbo.CustomerCustomerDemo
    ABS(BINARY_CHECKSUM([CustomerID],[CustomerTypeID]) * 87178291199) % 2147483647 < 184549375.9140625
  Step 3
    dbo.Products
    ABS(BINARY_CHECKSUM([ProductID],[ProductName],[SupplierID],[CategoryID],[QuantityPerUnit],[UnitPrice],[UnitsInStock],[UnitsOnOrder],[ReorderLevel],[Discontinued],[UnitId],[UnitVolume],[UnitName]) * 87178291199) % 2147483647 < 184549375.9140625
  Step 4
    dbo.EmployeeTerritories
    ABS(BINARY_CHECKSUM([EmployeeID],[TerritoryID],[foo]) * 87178291199) % 2147483647 < 184549375.9140625
  Step 5:
    dbo.Order Details (OrderID) -> dbo.Orders (OrderID)
  Step 6:
    dbo.Order Details (ProductID) -> dbo.Products (ProductID)
  Step 7:
    dbo.Territories (TerritoryID) <- dbo.EmployeeTerritories (TerritoryID)
  Step 8:
    dbo.Customers (CustomerID) <- dbo.CustomerCustomerDemo (CustomerID)
  Step 9:
    dbo.Customers (CustomerID) <- dbo.Orders (CustomerID)
  Step 10:
    dbo.Employees (EmployeeID) <- dbo.EmployeeTerritories (EmployeeID)
  Step 11:
    dbo.Employees (EmployeeID) <- dbo.Orders (EmployeeID)
  Step 12:
    dbo.Employees (EmployeeID) <- dbo.Employees (ReportsTo)

--------------------------------------------------

Traversal tree:

[ start ]
├─ dbo.Orders
│  ├─ dbo.Order Details
│  ├─ dbo.Customers
│  └─ dbo.Employees
├─ dbo.CustomerCustomerDemo
│  └─ dbo.Customers
├─ dbo.Products
│  └─ dbo.Order Details
└─ dbo.EmployeeTerritories
   ├─ dbo.Territories
   └─ dbo.Employees

